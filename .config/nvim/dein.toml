# buffer list that lives in the tabline
[[plugins]]
repo = 'ap/vim-buftabline'

# Change input mode to English when exiting insert mode
[[plugins]]
repo = 'yoshida-m-3/vim-im-select'
hook_add = '''
  let g:im_select_default = 'com.google.inputmethod.Japanese.Roman'
'''

[[plugins]]
repo = 'sainnhe/everforest'
hook_add = '''
  set background=dark

  let g:everforest_background = 'hard'
  let g:everforest_better_performance = 1

  colorscheme everforest
'''

# LSP and other support tools
[[plugins]]
repo = 'neoclide/coc.nvim'
source = 'release'
build = 'coc#util#install()'
hook_add = '''
  let g:coc_global_extensions = [
  \'coc-explorer',
  \'coc-lists',
  \'coc-git',
  \'coc-tsserver',
  \'coc-styled-components',
  \'coc-json',
  \]
  if isdirectory('./node_modules') && isdirectory('./node_modules/prettier')
    let g:coc_global_extensions += ['coc-prettier']
  endif

  if isdirectory('./node_modules') && isdirectory('./node_modules/eslint')
    let g:coc_global_extensions += ['coc-eslint']
  endif

  " Go to code navigation.
  nmap <silent> gd <Plug>(coc-definition)
  nmap <silent> gy <Plug>(coc-type-definition)
  nmap <silent> gi <Plug>(coc-implementation)
  nmap <silent> gr <Plug>(coc-references)

  " Use K to show documentation in preview window.
  nnoremap <silent> K :call ShowDocumentation()<CR>

  function! ShowDocumentation()
    if CocAction('hasProvider', 'hover')
      call CocActionAsync('doHover')
    else
      call feedkeys('K', 'in')
    endif
  endfunction

  " Highlight the symbol and its references when holding the cursor.
  autocmd CursorHold * silent call CocActionAsync('highlight')

  " autocmd CursorHold * silent call ShowDocumentation()

  " coc-lists
  nmap <Leader>lf <Cmd>CocList files<CR>
  nmap <Leader>lm <Cmd>CocList mru<CR>

  " coc-explorer
  nmap <Leader>e <Cmd>CocCommand explorer<CR>
'''
